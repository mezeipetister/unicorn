# Start from the official Rust image
FROM rust:1.50 as builder

# Create a new empty shell project
WORKDIR /unicorn_root

# Copy over your manifest
ADD ../client/ ./client
ADD ../proto/ ./proto
ADD ../corelib/ ./corelib
ADD ../server/ ./server
ADD ../Cargo.toml ./Cargo.toml

RUN apt-get update && apt-get install -y protobuf-compiler

# This build step will cache your dependencies
RUN cargo build --release -p server

# Build for release
RUN rm ./target/release/deps/server*
RUN cargo build --release -p server

# Our start production image
FROM debian:trixie-slim
RUN apt-get update \
    && apt-get install -y ca-certificates tzdata protobuf-compiler \
    && rm -rf /var/lib/apt/lists/*

# Copy the build artifact from the builder stage
COPY --from=builder /unicorn_root/target/release/server .

# Set the binary as the entrypoint of the container
ENTRYPOINT ["./server"]